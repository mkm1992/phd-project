%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: C:\Users\Dr. Emadi2\Desktop\thesis\ud\rrh1.eps
%%CreationDate: 09/18/2017  17:14:58
%%DocumentNeededFonts: Helvetica
%%+ Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    20   174   590   617
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    20   174   590   617
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0240 7404 csm

    0     0  6849  5310 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6850 5311 rf
6 w
0 4328 5308 0 0 -4328 890 4726 4 MP
PP
-5308 0 0 4328 5308 0 0 -4328 890 4726 5 MP stroke
4 w
DO
SO
6 w
0 sg
 890  398 mt 6198  398 L
 890 4726 mt 6198 4726 L
6198 4726 mt 6198  398 L
 890 4726 mt  890  398 L
 890 4726 mt 6198 4726 L
 890 4726 mt  890  398 L
 890 4726 mt  890 4672 L
 890  398 mt  890  451 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 824 4871 mt 
(10) s
1479 4726 mt 1479 4672 L
1479  398 mt 1479  451 L
1413 4871 mt 
(20) s
2069 4726 mt 2069 4672 L
2069  398 mt 2069  451 L
2003 4871 mt 
(30) s
2659 4726 mt 2659 4672 L
2659  398 mt 2659  451 L
2593 4871 mt 
(40) s
3249 4726 mt 3249 4672 L
3249  398 mt 3249  451 L
3183 4871 mt 
(50) s
3838 4726 mt 3838 4672 L
3838  398 mt 3838  451 L
3772 4871 mt 
(60) s
4428 4726 mt 4428 4672 L
4428  398 mt 4428  451 L
4362 4871 mt 
(70) s
5018 4726 mt 5018 4672 L
5018  398 mt 5018  451 L
4952 4871 mt 
(80) s
5608 4726 mt 5608 4672 L
5608  398 mt 5608  451 L
5542 4871 mt 
(90) s
6198 4726 mt 6198 4672 L
6198  398 mt 6198  451 L
6098 4871 mt 
(100) s
 890 4726 mt  943 4726 L
6198 4726 mt 6144 4726 L
 789 4770 mt 
(0) s
 890 4107 mt  943 4107 L
6198 4107 mt 6144 4107 L
 789 4151 mt 
(2) s
 890 3489 mt  943 3489 L
6198 3489 mt 6144 3489 L
 789 3533 mt 
(4) s
 890 2871 mt  943 2871 L
6198 2871 mt 6144 2871 L
 789 2915 mt 
(6) s
 890 2252 mt  943 2252 L
6198 2252 mt 6144 2252 L
 789 2296 mt 
(8) s
 890 1634 mt  943 1634 L
6198 1634 mt 6144 1634 L
 722 1678 mt 
(10) s
 890 1016 mt  943 1016 L
6198 1016 mt 6144 1016 L
 722 1060 mt 
(12) s
 890  398 mt  943  398 L
6198  398 mt 6144  398 L
 722  442 mt 
(14) s
 890  344 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

1116  270 mt 
(7) s
 890  398 mt 6198  398 L
 890 4726 mt 6198 4726 L
6198 4726 mt 6198  398 L
 890 4726 mt  890  398 L
gs 890 398 5309 4329 rc
24 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
590 -355 590 -360 590 -579 590 -316 589 -411 590 -417 590 -397 590 -484 
589 -361 890 4264 10 MP stroke
gr

24 w
c8
 854 4264 mt  926 4264 L
 890 4228 mt  890 4300 L
1443 3903 mt 1515 3903 L
1479 3867 mt 1479 3939 L
2033 3419 mt 2105 3419 L
2069 3383 mt 2069 3455 L
2623 3022 mt 2695 3022 L
2659 2986 mt 2659 3058 L
3213 2605 mt 3285 2605 L
3249 2569 mt 3249 2641 L
3802 2194 mt 3874 2194 L
3838 2158 mt 3838 2230 L
4392 1878 mt 4464 1878 L
4428 1842 mt 4428 1914 L
4982 1299 mt 5054 1299 L
5018 1263 mt 5018 1335 L
5572  939 mt 5644  939 L
5608  903 mt 5608  975 L
6162  584 mt 6234  584 L
6198  548 mt 6198  620 L
 865 4239 mt  915 4289 L
 915 4239 mt  865 4289 L
1454 3878 mt 1504 3928 L
1504 3878 mt 1454 3928 L
2044 3394 mt 2094 3444 L
2094 3394 mt 2044 3444 L
2634 2997 mt 2684 3047 L
2684 2997 mt 2634 3047 L
3224 2580 mt 3274 2630 L
3274 2580 mt 3224 2630 L
3813 2169 mt 3863 2219 L
3863 2169 mt 3813 2219 L
4403 1853 mt 4453 1903 L
4453 1853 mt 4403 1903 L
4993 1274 mt 5043 1324 L
5043 1274 mt 4993 1324 L
5583  914 mt 5633  964 L
5633  914 mt 5583  964 L
6173  559 mt 6223  609 L
6223  559 mt 6173  609 L
gs 890 398 5309 4329 rc
DD
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
590 41 590 -204 590 -222 590 -120 589 -174 590 -306 590 -270 590 -367 
589 -251 890 4423 10 MP stroke
gr

c9
DD
gs 792 2411 5505 2111 rc
SO
0 j
0 -58 -58 0 0 58 58 0 861 4394 5 MP
DP
0 -58 -58 0 0 58 58 0 1450 4143 5 MP
DP
0 -58 -58 0 0 58 58 0 2040 3776 5 MP
DP
0 -58 -58 0 0 58 58 0 2630 3506 5 MP
DP
0 -58 -58 0 0 58 58 0 3220 3200 5 MP
DP
0 -58 -58 0 0 58 58 0 3809 3026 5 MP
DP
0 -58 -58 0 0 58 58 0 4399 2906 5 MP
DP
0 -58 -58 0 0 58 58 0 4989 2684 5 MP
DP
0 -58 -58 0 0 58 58 0 5579 2480 5 MP
DP
0 -58 -58 0 0 58 58 0 6169 2521 5 MP
DP
DD
gr

gs 890 398 5309 4329 rc
gr

0 sg
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 144 FMSR

2699 5023 mt 
(Number of RRHs per Cluster) s
 636 2823 mt  -90 rotate
(EE\(bit/J\)) s
90 rotate
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 144 FMSR

2421  299 mt 
(EE vs. Number of RRHs per Cluster) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 873 4769 mt 
( ) s
6182  440 mt 
( ) s
SO
6 w
1 sg
0 432 1620 0 0 -432 980 832 4 MP
PP
-1620 0 0 432 1620 0 0 -432 980 832 5 MP stroke
4 w
DO
SO
6 w
0 sg
 980  400 mt 2600  400 L
 980  832 mt 2600  832 L
2600  832 mt 2600  400 L
 980  832 mt  980  400 L
 980  832 mt 2600  832 L
 980  832 mt  980  400 L
 980  400 mt 2600  400 L
 980  832 mt 2600  832 L
2600  832 mt 2600  400 L
 980  832 mt  980  400 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 144 FMSR

1448  568 mt 
(5 UEs per Cluster) s
gs 980 400 1621 433 rc
24 w
c8
360 0 1052 518 2 MP stroke
gr

24 w
c8
1196  518 mt 1268  518 L
1232  482 mt 1232  554 L
1207  493 mt 1257  543 L
1257  493 mt 1207  543 L
gs 980 400 1621 433 rc
gr

0 sg
1448  763 mt 
(2 UEs per Cluster) s
gs 980 400 1621 433 rc
DD
c9
360 0 1052 713 2 MP stroke
1232 713 PD
gr

c9
DD
SO
0 j
0 -58 -58 0 0 58 58 0 1203 684 5 MP
DP
DD
gs 980 400 1621 433 rc
SO
6 w
gr

6 w
SO

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
