#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
#
# Copyright (c) 2017, Juniper Networks, Inc. All rights reserved.
#
#
# The contents of this file are subject to the terms of the BSD 3 clause
# License (the "License"). You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at
# https://github.com/Juniper/warp17/blob/master/LICENSE.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# File name:
#     test_11_ipv4_latency.cfg
#
# Description:
#
#
# Author:
#     Matteo Triggiani
#
# Initial Created:
#     10/03/2017
#
# Notes:
#
#

# Assuming a back to back topology with:
# PORT 0 - client port
# PORT 1 - server port

# Client port configuration
# Add the L3 interface on the client side
add tests l3_intf port 0 ip 10.0.0.1 mask 255.255.255.0
add tests l3_intf port 0 ip 10.0.0.2 mask 255.255.255.0
add tests l3_gw port 0 gw 10.0.0.253

# Add client base configuration l4 and http l5
add tests client tcp   port 0 test-case-id 0 src 10.0.0.1 10.0.0.1 sport 10001 60000 dest 10.0.0.252 10.0.0.252 dport 6001 6200
set tests timeouts     port 0 test-case-id 0 init 0
set tests timeouts     port 0 test-case-id 0 uptime 60
set tests timeouts     port 0 test-case-id 0 downtime 5
set tests criteria     port 0 test-case-id 0 run-time 3600
set tests client http  port 0 test-case-id 0 GET google.com /index.html req-size 10

# Set l4 options for transmitting/receiving timestamps
set tests ipv4-options port 0 test-case-id 0 tx-timestamp 1
set tests ipv4-options port 0 test-case-id 0 rx-timestamp 1

# Enable recent latency window of 30 samples and set options for latency display
# In particular, each time that latency will be more than 5 a counter will be
# incremented, each time that latency average will be over 2, same
set tests latency      port 0 test-case-id 0 max 5 max-avg 2 samples 30


# Server port configuration
# Add the L3 interface on the server side
add tests l3_intf port 1 ip 10.0.0.252 mask 255.255.255.0
add tests l3_intf port 1 ip 10.0.0.253 mask 255.255.255.0
add tests l3_gw   port 1 gw 10.0.0.1

# Add server base configuration l4 and http l5
add tests server tcp   port 1 test-case-id 0 src 10.0.0.252 10.0.0.252 sport 6001 6200
set tests server http  port 1 test-case-id 0 200-OK resp-size 20

# Set l4 options for transmitting/receiving timestamps
set tests ipv4-options port 1 test-case-id 0 rx-timestamp 1
set tests ipv4-options port 1 test-case-id 0 tx-timestamp 1

# Enable recent latency window of 100 samples and set options for latency display
# In particular, each time that latency will be more than 5 a counter will be
# incremented, each time that latency average will be over 2, same
set tests latency      port 1 test-case-id 0 max 5 max-avg 2 samples 100

start tests port 1
start tests port 0
show tests ui

